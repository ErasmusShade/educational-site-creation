# High-Level Logic:
#    Only runs if the push occurs in your fork (github.repository_owner == 'RichLewis007')
#    Skips the action if the push is to one of the excluded branches: gh-pages, sync-fork
#    For every valid branch push, it:
#        Fetches from upstream (the original MakerFriends repo)
#        Checks if a PR is needed (by comparing commits or branch name)
#        Finds existing PRs for that branch
#        Closes older PRs (leaving only one open PR per branch)
#        Reopens a closed PR if it exists
#        Creates a new PR if none exists
#        changes to main are being ignored
#    PRs are opened against MakerFriends/educational-site-creation:main

name: fork-auto-create-pull-request-on-upstream

on:
  push:
    branches:
      - '**'

jobs:
  precheck:
    runs-on: ubuntu-latest
    outputs:
      is-fork: ${{ steps.check.outputs.is-fork }}
    steps:
      - name: Check if this is the fork
        id: check
        run: |
          echo "üß† Repo: ${{ github.repository }}"
          if [ "${{ github.repository_owner }}" == "RichLewis007" ]; then
            echo "is-fork=true" >> "$GITHUB_OUTPUT"
            echo "‚úÖ Proceeding in fork"
          else
            echo "is-fork=false" >> "$GITHUB_OUTPUT"
            echo "‚õî Exiting: This workflow is only for the fork."
            exit 0
          fi

  create-pr:
    needs: precheck
    if: needs.precheck.outputs.is-fork == 'true'
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.FORK_GH_TOKEN4 }}

    steps:
      - name: Confirm GH_TOKEN is set
        run: |
          if [ -z "$GH_TOKEN" ]; then
            echo "‚ùå GH_TOKEN is missing. Please set the secret correctly."
            exit 1
          else
            echo "‚úÖ GH_TOKEN appears to be set."
          fi

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh jq

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Show auth status
        run: gh auth status

      - name: Skip if branch is excluded
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "üåø Branch: $BRANCH_NAME"

          if [[ "$BRANCH_NAME" == "main" ]]; then
            echo "üö´ Skipping PR creation for branch: main"
            exit 0
          fi

          IGNORE_BRANCHES=("gh-pages" "sync-fork")
          for IGNORE in "${IGNORE_BRANCHES[@]}"; do
            if [[ "$BRANCH_NAME" == "$IGNORE" ]]; then
              echo "üö´ Skipping PR creation for ignored branch: $BRANCH_NAME"
              exit 0
            fi
          done

      - name: Check for existing PRs
        id: find-pr
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"

          echo "üì• Fetching PRs for branch: $BRANCH_NAME"
          gh pr list --head "$BRANCH_NAME" --state all --json number,state,updatedAt \
            | jq 'sort_by(.updatedAt) | reverse' > prlist.json

          PR_NUMBER=$(jq -r '.[0].number // empty' prlist.json)
          PR_STATE=$(jq -r '.[0].state // empty' prlist.json)

          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"
          echo "PR_STATE=$PR_STATE" >> "$GITHUB_ENV"

      - name: Close older PRs from same branch
        if: env.PR_NUMBER != ''
        run: |
          echo "üßπ Closing older PRs from the same branch (excluding most recent: #$PR_NUMBER)"

          jq -c '.[1:][]' prlist.json | while read -r pr; do
            PR_NUM=$(echo "$pr" | jq -r '.number')
            PR_STATE=$(echo "$pr" | jq -r '.state')

            if [[ "$PR_STATE" == "OPEN" ]]; then
              echo "üõë Closing open PR #$PR_NUM"
              gh pr close "$PR_NUM" --comment "Closed automatically in favor of newer PR #$PR_NUMBER."
            else
              echo "‚ÑπÔ∏è Skipping PR #$PR_NUM (state: $PR_STATE)"
            fi
          done

      - name: Reopen existing PR if closed
        if: env.PR_STATE == 'CLOSED'
        run: |
          echo "‚ôªÔ∏è Reopening previously closed PR #$PR_NUMBER"
          gh pr reopen "$PR_NUMBER"
          gh pr comment "$PR_NUMBER" --body "üîÅ Reopened automatically due to new push to branch."

      - name: Create new PR if none found
        if: env.PR_NUMBER == ''
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "üì¨ Creating new PR for: $BRANCH_NAME"
          gh pr create \
            --title "Automated Pull Request: $BRANCH_NAME" \
            --body "Automated Pull Request from ${{ github.repository_owner }} branch $BRANCH_NAME." \
            --label "automerge" \
            --base main \
            --head "${{ github.repository_owner }}:$BRANCH_NAME" \
            --repo MakerFriends/educational-site-creation
